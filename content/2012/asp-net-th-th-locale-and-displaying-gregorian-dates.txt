---
title: "ASP.NET: th-TH locale and displaying Gregorian dates"
author: Michaelhughes
date: 20.04.2012
filter: [rst, ]
tags: [.net, Web Services, Windows]
---

Windows and the .net framework support cultural localization for a number of regions globally. The localization features provided by .net and by ASP.net especially speed development of web applications for global deployment.Based on the culture settings of the application ASP.net page controls such as calendars will automatically adjust to display dates in the locally correct format. Part of .net's globalization is based on the locale features already built into Windows. `Windows locales <http://msdn.microsoft.com/en-us/goglobal/bb688174>`_ contain preset defaults and information about all of the supported locales, examples of preset information are a region's default calendar system, timezone, and local currency.

Of particular interest for this post is the th-TH culture (or locale for unmanaged code), that is, Thai language in Thailand. The th-TH culture sets the `Buddhist Calendar <http://en.wikipedia.org/wiki/Buddhist_calendar>`_ (where the current year is 2555) as the default calendar when used. The th-TH culture also defines several other optional calendars, including a localized `Gregorian Calendar <http://en.wikipedia.org/wiki/Gregorian_calendar>`_ (the calendar system we all know, where the current date is 2012). It is worth mentioning at this point that the default calendar defined in a .NET culture setting **only** effects the dates as displayed. Dates are stored internally using the Gregorian calendar when in .NET objects such as the `datetime <http://msdn.microsoft.com/en-us/library/system.datetime.aspx>`_ object.

Recently I worked on a web application localized for Thailand where all dates needed to be displayed with the Gregorian calendar system.The simplest way I found to display dates with the Gregorian calendar was to change default calendar of the culture object for incoming requests to Gregorian from Buddhist. To change the default calendar I placed the following in the ``Application_AcquireRequestState(object sender, EventArgs e)`` method in Global.asax.cs:

::


   if (!(Thread.CurrentThread.CurrentCulture.Calendar is GregorianCalendar)) {

     foreach (var optionalCalendar in Thread.CurrentThread.CurrentCulture.OptionalCalendars) {

       if (optionalCalendar is GregorianCalendar) {

         Thread.CurrentThread.CurrentCulture.DateTimeFormat.Calendar = new GregorianCalendar(GregorianCalendarTypes.Localized);

         break;

       }

     }

   }


In words these expressions check if the current default calendar is Gregorian. If the current calendar is not Gregorian then we loop through the culture's optional calendars. If Gregorian is an optional calendar for the culture then we instantiate a new calendar object and assign it as the default calendar. After the above statements execute the dates displayed by the ASP.net application for the current request will be in the Gregorian calendar not Buddhist.
